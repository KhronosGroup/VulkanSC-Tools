# Copyright (c) 2021-2023 The Khronos Group Inc.
# Copyright (c) 2021-2023 Valve Corporation
# Copyright (c) 2021-2023 LunarG, Inc.
# Copyright (c) 2023-2023 RasterGrid Kft.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: tools - Vulkan SC

on:
    push:
        branches:
            - '!main'
    pull_request:
        branches:
            - sc_main

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # github.head_ref is only defined on pull_request
  # Fallback to the run ID, which is guaranteed to be both unique and defined for the run.
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id  }}
  cancel-in-progress: true

jobs:
    linux-sc:
        runs-on: ${{matrix.os}}

        strategy:
            matrix:
                cc: [ gcc, clang ]
                cxx: [ g++, clang++ ]
                config: [ Debug, Release ]
                os: [ ubuntu-22.04 ]
                exclude:
                    - cc: gcc
                      cxx: clang++
                    - cc: clang
                      cxx: g++

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                python-version: '3.7'
            - uses: lukka/get-cmake@latest
              with:
                cmakeVersion: 3.17.2

            - name: Install build dependencies
              run: |
                python3 -m pip install jsonschema pyparsing
                sudo apt update && sudo apt install --yes --no-install-recommends libwayland-dev libxrandr-dev

            - name: Configure
              run: |
                cmake -S. -B build -G "Ninja" \
                -D CMAKE_BUILD_TYPE=${{matrix.config}} \
                -D UPDATE_DEPS=ON \
                -D BUILD_WERROR=ON \
                -D INSTALL_ICD=ON \
                -D ENABLE_ADDRESS_SANITIZER=ON \
                -D VULKANSC=ON \
                -D BUILD_VKSC_DEVSIM=ON
              env:
                CC: ${{matrix.cc}}
                CXX: ${{matrix.cxx}}

            - name: Build
              run: cmake --build build

            - name: Install
              run: cmake --install build/ --prefix build/install

            - name: Verify generated source files
              run: python scripts/generate_source.py --verify external/${{ matrix.config }}/Vulkan-Headers/build/install/share/vulkan/registry --api vulkansc

    windows-sc:
        runs-on: ${{matrix.os}}

        strategy:
            matrix:
                arch: [ Win32, x64 ]
                config: [ Debug, Release ]
                os: [ windows-latest ]

        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v4
              with:
                python-version: '3.7'
            - uses: lukka/get-cmake@latest
            - uses: ilammy/msvc-dev-cmd@v1
              with:
                arch: ${{ matrix.arch }}

            - name: Install dependencies
              run: python -m pip install jsonschema pyparsing

            - name: Configure
              run: cmake -S. -B build -G "Ninja" -DCMAKE_BUILD_TYPE=${{matrix.config}} -D UPDATE_DEPS=ON -D INSTALL_ICD=ON -D BUILD_WERROR=ON -D VULKANSC=ON -D BUILD_VKSC_DEVSIM=ON

            - name: Build
              run: cmake --build ./build

            - name: Install
              run: cmake --install build/ --prefix build/install

    tools_codegen:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: actions/setup-python@v4
          with:
            python-version: '3.10'
        - run: python -m pip install jsonschema pyparsing
        - run: cmake -S . -B build/ -D UPDATE_DEPS=ON -D UPDATE_DEPS_DIR=external -D TOOLS_CODEGEN=ON -D VULKANSC=ON
        - run: cmake --build build --target tools_codegen
        - run: git diff --exit-code
